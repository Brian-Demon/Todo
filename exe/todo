#!/usr/bin/env ruby

require "thor"
require "bundler/setup"
require "todo"

class TodoCLI < Thor
  desc("add [ITEM]", "adds item to list")
  option :database, default: "~/.todo"
  def add(item)
    config = {
      database: File.open(File.expand_path(options[:database]), "a+")
    }
    manager = Todo::Manager.new(config)
    if manager.item_already_added?(item)
      response = ask "\"#{item}\" is already in the list. Add it again? [y/n]:".to_s
      return if response.downcase != "y"
    end
    manager.add(item)
    puts "\"#{item}\" added"
  end #add

  desc("display", "displays the current todo list")
  option :database, default: "~/.todo"
  def display
    config = {
      database: File.open(File.expand_path(options[:database]), "a+")
    }
    puts "\n#{Todo::Manager.new(config).display}\n"
  end #display

  desc("remove [ITEM]", "removes item from list")
  option :database, default: "~/.todo"
  def remove(item)
    config = {
      database: File.open(File.expand_path(options[:database]), "a+")
    }
    #Todo::Manager.new(config).remove(item)
    puts "Coming soon..."
  end #remove
end #TodoCLI

TodoCLI.start(ARGV)
